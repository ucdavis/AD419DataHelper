@model List<AD419.DataHelper.Web.Models.AllProjectsNew>

@{
    var errors = ViewBag.Errors as List<ModelStateDictionary>;
    if (errors == null)
    {
        errors = Model.Select(m => new ModelStateDictionary()).ToList();

    }
}

<table id="newProjectTable" class="table">
    <thead>
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(x => Model[0].AccessionNumber)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].ProjectNumber)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].ProposalNumber)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].AwardNumber)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].OrgR)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].Department)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].ProjectDirector)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].CoProjectDirectors)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].FundingSource)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].ProjectStartDate)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].ProjectEndDate)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].ProjectStatus)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].IsInterdepartmental)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].Is204)
            </th>
            <th>
                @Html.DisplayNameFor(x => Model[0].IsUcDavis)
            </th>
        </tr>
    </thead>
    <tbody>
        @for (var i = 0; i < Model.Count; i++)
        {
            var item = Model[i];
            var error = errors[i];
            <tr>
                <td>
                    @if (!error.IsValid)
                    {
                        var message = string.Join("\n",
                            error.Values
                                .SelectMany(v => v.Errors)
                                .Select(e => e.ErrorMessage));
                        
                        <span class="text-danger" title="@message">
                            <i class="fa fa-exclamation-triangle"></i>
                        </span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(x => item.AccessionNumber)
                </td>
                <td>
                    @Html.DisplayFor(x => item.ProjectNumber)
                </td>
                <td>
                    @Html.DisplayFor(x => item.ProposalNumber)
                </td>
                <td>
                    @Html.DisplayFor(x => item.AwardNumber)
                </td>
                <td>
                    @Html.DisplayFor(x => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(x => item.OrgR)
                </td>
                <td>
                    @Html.DisplayFor(x => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(x => item.ProjectDirector)
                </td>
                <td>
                    @Html.DisplayFor(x => item.CoProjectDirectors)
                </td>
                <td>
                    @Html.DisplayFor(x => item.FundingSource)
                </td>
                <td>
                    @Html.DisplayFor(x => item.ProjectStartDate)
                </td>
                <td>
                    @Html.DisplayFor(x => item.ProjectEndDate)
                </td>
                <td>
                    @Html.DisplayFor(x => item.ProjectStatus)
                </td>
                <td>
                    @item.IsInterdepartmental
                </td>
                <td>
                    @item.Is204
                </td>
                <td>
                    @item.IsUcDavis
                </td>
            </tr>
        }
    </tbody>
</table>

<form id="confirmForm" method="POST" action="@Url.Action("Save")">
    @Html.AntiForgeryToken()
    @for (var i = 0; i < Model.Count; i++)
    {
        @Html.HiddenFor(m => m[i].AccessionNumber)
        @Html.HiddenFor(m => m[i].ProjectNumber)
        @Html.HiddenFor(m => m[i].ProposalNumber)
        @Html.HiddenFor(m => m[i].AwardNumber)
        @Html.HiddenFor(m => m[i].Title)
        @Html.HiddenFor(m => m[i].OrganizationName)
        @Html.HiddenFor(m => m[i].OrgR)
        @Html.HiddenFor(m => m[i].Department)
        @Html.HiddenFor(m => m[i].ProjectDirector)
        @Html.HiddenFor(m => m[i].CoProjectDirectors)
        @Html.HiddenFor(m => m[i].FundingSource)
        @Html.HiddenFor(m => m[i].ProjectStartDate)
        @Html.HiddenFor(m => m[i].ProjectEndDate)
        @Html.HiddenFor(m => m[i].ProjectStatus)
        @Html.HiddenFor(m => m[i].IsInterdepartmental)
        @Html.HiddenFor(m => m[i].IsUcDavis)
        @Html.HiddenFor(m => m[i].Is204)
        @Html.HiddenFor(m => m[i].IsExpired)
    }
</form>
