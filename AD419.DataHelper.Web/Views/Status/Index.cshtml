@model List<AD419.DataHelper.Web.Models.ProcessCategory>
@{
    ViewBag.Title = "Index";
}

<h2>Project Status</h2>

@{
    // First let's find the lowest non-completed category, aka the current category
    var nonCompleted = Model.Where(c => !c.IsCompleted).ToArray();
    
    var currentCategoryId = nonCompleted.Any() ? nonCompleted.Min(c => c.Id) : 0;
}

@foreach (var category in Model)
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <a role="button" data-toggle="collapse" href="#collapse-@category.Id">

                <h3 class="panel-title category @(category.IsCompleted ? "complete" : "incomplete")" title="@category.Notes">@category.Id. @category.Name</h3>
            </a>
        </div>
        <div id="collapse-@category.Id" class="panel-body collapse @(category.Id == currentCategoryId ? "in active-category" : "out inactive-category")">
            @if (!string.IsNullOrWhiteSpace(category.Notes))
            {
                <div class="well well-sm">
                    @category.Notes
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(category.StoredProcedureName))
            {
                <a class="btn btn-primary @(category.Id != currentCategoryId ? "disabled" : "")">Click here to @category.Name</a>
            }
            <ul class="checklist">
                @foreach (var status in category.Statuses)
                {
                    <li class="@(status.IsCompleted ? "complete" : "incomplete")">
                        @if (status.IsCompleted)
                        {
                            <i class="fa fa-check-circle bullet"></i>
                        }
                        else
                        {
                            <i class="fa fa-circle-thin bullet"></i>
                        }
                        <h2>@status.Name</h2>
                        <p>@status.Notes</p>
                    </li>
                }
            </ul>
            @if (string.IsNullOrWhiteSpace(category.StoredProcedureName) && category.Statuses.All(a => !a.IsCompleted))
            {
                var disabled = category.Id != currentCategoryId ? "disabled='disabled" : string.Empty;
                using (Html.BeginForm("Completed", "Status", new {id=category.Id}, FormMethod.Post))
                {                    
                    @Html.AntiForgeryToken()
                    <input type="submit" class="btn btn-primary" @disabled value="I've done these processes"/>

                }
            }
        </div>
    </div>
}