@model List<AD419.DataHelper.Web.Models.ProcessCategory>
@{
    ViewBag.Title = "Index";
}

@section AdditionalStyles {
    <style>
        .align-btn-xs {
            margin-left: -8px;
        }
    </style>
}

<h2>AD-419 Reporting Process Status and Operation</h2>

<div>
    <h3><p>This page displays a list of all steps necessary to complete the AD-419 Reporting Process, as well as an indication of which steps have yet to be completed.</p>
        <p>It serves as both a checklist and a control panel with which to guide you through the process.</p></h3>
    <br/>
    <h4> Although there are a large number of steps listed on this page, they are basically comprised of the following seven (7): </h4>
    
    <ol>
        <li>Data collection from both internal (campus data warehouses) and external (Excel spreadsheets) data sources,</li>
        <li>Reviewing the collected data to ensure accuracy and making any modifications as necessary,</li>
        <li>Loading the above expense data into the AD-419 web application,</li>
        <li>Associating the expense data via the AD-419 web application, performed by the various College departments*,</li>
        <li>Reviewing the above associations,</li>
        <li>Creating the Final Reports utilizing the above associated data, and</li> 
        <li>Submitting a modified version of the above reports to ANR.</li>
    </ol>
    <i>*All of the above actions are performed by members of the Dean's Office accounting staff unless otherwise noted.</i>

</div>

<hr/>
@{
    // First let's find the lowest non-completed category, aka the current category
    var nonCompleted = Model.Where(c => !c.IsCompleted).ToArray();
    
    var currentSequenceOrder = nonCompleted.Any() ? nonCompleted.Min(c => c.SequenceOrder) : 0;
}

@Html.AntiForgeryToken()

@using (Html.BeginForm("Reset", "Status", FormMethod.Post, new { id = "ResetForm", enctype = "multipart/form-data", @class = "" }))
{
    @Html.AntiForgeryToken()
    <div>
        <dl>
            <dt>Selecting this button will <i><strong>RESET</strong></i> all completed steps you have accomplished and allow you to restart at the beginning.&nbsp; &nbsp; </dt>
            <dd><input type="submit" data-confirm="Are you sure you want to start over?" class="btn btn-warning" value="Reset Status" /></dd>

        </dl>
    </div>
}

@using (Html.BeginForm("ClearAssociations", "Status", FormMethod.Post, new { id = "ResetForm", enctype = "multipart/form-data", @class = "" }))
{
    @Html.AntiForgeryToken()
    <div>
        <dl><dt>Selecting this button will <i><strong>DELETE</strong></i> all of the Expense and Association data from the AD-419 application's data set, and then reload the expenses table, plus the re-associate 204, 20x, CE, Field Station and 241 expenses.  
            It will reset the status of all the steps after the point in which the expenses were loaded to allow you to pickup the process from that point forward without having to restart back at the beginning.</dt>
        <dd><input type="submit" data-confirm="Are you sure you want to delete all AD-419 Associations?" class="btn btn-warning" value="Delete Associations" /></dd></dl>
    </div>
}

@foreach (var category in Model.OrderBy(c => c.SequenceOrder))
{
    var isActiveCategory = category.SequenceOrder == currentSequenceOrder;
    var activePannel = isActiveCategory ? "activePannel" : string.Empty;
    <div class="panel panel-default @activePannel">
        <div class="panel-heading">
            <a role="button" data-toggle="collapse" href="#collapse-@category.Id">

                <h3 class="panel-title category @(category.IsCompleted ? "complete" : "incomplete")" title="@category.Notes">@category.SequenceOrder. @category.Name</h3>
            </a>
        </div>
        <div id="collapse-@category.Id" class="panel-body collapse @(isActiveCategory ? "in active-category" : "out inactive-category")">
            @if (!string.IsNullOrWhiteSpace(category.Notes))
            {
                <div class="well well-sm">
                    @category.Notes
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(category.StoredProcedureName))
            {
                var disabled = category.SequenceOrder != currentSequenceOrder ? "disabled='disabled" : string.Empty;

                <button data-id="@category.Id" data-name="@category.Name" class="sproc btn btn-primary" @disabled><i class="fa fa-spin" > </i> <span> Click here to</span> @category.Name</button>

            }
            @{
                var orderedStatuses = category.Statuses.OrderBy(c => c.SequenceOrder);
                var currentStatusSequenceOrder = orderedStatuses.Any(s => !s.IsCompleted) ? orderedStatuses.Where(s => !s.IsCompleted).Min(c => c.SequenceOrder) : 0;
            }
            <ul class="checklist">
                @foreach (var status in category.Statuses.OrderBy(c=>c.SequenceOrder))
                {
                    <li class="@(status.IsCompleted ? "complete" : "incomplete")">
                            @if (isActiveCategory && status.NoProcessingRequired == true)
                            {
                                // Active category
                                    using (Html.BeginForm("StatusCompleted", "Status", new { id = status.Id }, FormMethod.Post))
                                    {
                                    @Html.AntiForgeryToken()
                                    <h2>
                                        @if (status.IsCompleted == false)
                                        {
                                            if (status.SequenceOrder == currentStatusSequenceOrder)
                                            {
                                                <button type="submit" class="fa fa-circle-thin btn-xs align-btn-xs" style="color:black"></button>

                                            }
                                            else
                                            {
                                                <button type="submit" class="fa fa-circle-thin btn-xs align-btn-xs" style="color: white" disabled="disabled"></button>
                                                @*<i class="fa fa-circle-thin bullet"></i>*@
                                            }

                                            if (string.IsNullOrWhiteSpace(status.Hyperlink))
                                            {
                                                @status.Name
                                            }
                                            else
                                            {
                                                <a class="disabled display-inline" href="@Url.Action("", status.Hyperlink)">@status.Name <i class="fa fa-external-link"></i></a>
                                            }
                                        }
                                        else
                                        {
                                            <button type="submit" class="fa fa-check-circle btn-xs align-btn-xs"></button>
                                            if (string.IsNullOrWhiteSpace(status.Hyperlink))
                                            {
                                                @status.Name
                                            }
                                            else
                                            {
                                                <a class="disabled" href="@Url.Action("", status.Hyperlink)">@status.Name <i class="fa fa-external-link"></i></a>
                                            }
                                        }
                                    </h2>
                                    }
                                
                            }
                            else if (status.IsCompleted)
                            { // Completed, inactive category
                                <i class="fa fa-check-circle bullet"></i>
                                <h2>
                                    @if (string.IsNullOrWhiteSpace(status.Hyperlink))
                                    {
                                        @status.Name
                                    }
                                    else
                                    {
                                        <a class="disabled" href="@Url.Action("", status.Hyperlink)">@status.Name <i class="fa fa-external-link"></i></a>
                                    }
                                </h2>
                            }
                            else // Not completed, inactive category.
                            {
                                <i class="fa fa-circle-thin bullet"></i>
                                <h2>
                                    @if (string.IsNullOrWhiteSpace(status.Hyperlink))
                                          {
                                              @status.Name
                                          }
                                          else
                                          {
                                              <a class="disabled" href="@Url.Action("", status.Hyperlink)">@status.Name <i class="fa fa-external-link"></i></a>
                                          }
                                </h2>
                            }

                        <p>@status.Notes</p>
                    </li>
                }
            </ul>
            @if (string.IsNullOrWhiteSpace(category.StoredProcedureName))
            {
                var disabled = category.SequenceOrder != currentSequenceOrder ? "disabled='disabled" : string.Empty;
                using (Html.BeginForm("Completed", "Status", new {id = category.Id}, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <input type="submit" class="btn btn-primary" @disabled value="I've done these steps"/>

                }
            }
        </div>
    </div>
}
@section AdditionalScripts
{
    <script type="text/javascript">
        $('[data-confirm]').on('click', function(e) {
            if (!confirm(jQuery(this).attr("data-confirm"))) {
                e.preventDefault();
            }
        });
    </script>

    <script type="text/javascript">
        $(".sproc").on('click', function () {
            var $theButton = $(this);
            var id = $theButton.data("id");
            var $buttonIcon = $('i', $theButton);
            var $buttontext = $('span', $theButton);
            $buttonIcon.addClass('fa-spinner');
            $buttontext.text(" Please wait, executing:");
            $theButton.prop("disabled", true);

            var antiforgery = $("input[name='__RequestVerificationToken']").val();
            $.ajax({
                    type: 'POST',
                    url: '@Url.Action("RunSproc")',
                    data: { id: id, __RequestVerificationToken: antiforgery }
                })
                .success(function(data) {
                    $buttonIcon.removeClass('fa-spinner');
                    if (data.Success === false) {
                        $buttontext.text(data.ErrorMessage +" Error executing:");
                        $theButton.removeClass("btn-primary");
                        $theButton.addClass("btn-danger");
                    }
                    if (data.Success === true) {
                        location.reload();
                    }
                })
                .fail(function() {
                    $theButton.prop("disabled", false);
                    $buttonIcon.removeClass('fa-spinner');
                    $buttontext.text(" Error executing:");
                });

        });
    </script>
    <script type="text/javascript">
        $(function() {
            $('html, body').animate({
                scrollTop: $('.activePannel').offset().top - $("#nav").height()
            }, 'slow');
        });
    </script>
}