@model IEnumerable<AD419.DataHelper.Web.Models.SelfCertifyingTitleCode>

@{
    ViewBag.Title = "Index - Self-Certifying Title Codes";
}

<div class="pull-right">
    <button class="btn btn-default display-inline" data-toggle="modal" data-target="#uploadModal"><i class="fa fa-upload"></i> Upload New Source File</button>
    <form action="@Url.Action("DeleteAll")" method="POST" class="display-inline">
        @Html.AntiForgeryToken()
        <input type="submit" id="btnDeleteAll" value="Delete All" title="Delete All" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete ALL the records?')" />
    </form>
</div>

<h2>@ViewBag.Title</h2>

<h4>
    These Title Codes help us identify the conditional "241" title codes.<br /><br/>
    You may import an entire list using the "Upload New Source File" button (above) or enter them one at a time using the "Create New" button (below).
</h4>

    There are several types of SFN "241" (PI/Scientist) title codes:<br />
    <ol>
        <li>Those that are permanently* "241", meaning employee effort in these title codes is always classified as "241", and </li>
        <li>those that are conditionally "241", meaning employee effort in these title codes is classified as "241" only if an employee is serving in the capacity as a project PI, and either
            <ul>
            <li>have a title code beginning with "33" or a title code like "3200", "3210" or "3220" or</li>
            <li>are included in this list**.</li>
        </ul></li>
    </ol>
    <i>
        Notes: <br />
        *The permanent "241" title codes are maintained under Maintenance -> Title Code Staff Types. <br /> 
        **Any permanent "241" title codes included in this list will default to permanent, so they need not be excluded when uploading the list.
    </i>
<hr />
<p>
    @Html.ActionLink("Create New", "Create", "SelfCertifyingTitleCodesImport", null, new { @class = "btn btn-default" })
</p>
@if (Model.Count() != 0)
{
    <table id="selfCertifyingTitleCodesImportTable" class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.TitleCode)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TitleName)
                </th>
                @*<th>
                    @Html.DisplayNameFor(model => model.ClassTitleOutline)
                </th>*@
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TitleCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TitleName)
                    </td>
                    @*<td>
                        @Html.DisplayFor(modelItem => item.ClassTitleOutline)
                    </td>*@
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h4>Self Certifying Title Code Data has yet to be created or uploaded.</h4>
    <p>Select the "Create New" (above) or browse and display an existing Self Certifying Title Codes Excel file (above).</p>
}

@Html.Partial("_Upload")

@section AdditionalScripts
{
    <script type="text/javascript" src="~/Scripts/upload-wizard.js"></script>
<script type="text/javascript">
    $(function () {
        UploadWizard.setup({
            uploadUrl: '@Url.Action("Upload")',
            tableOptions: {
                order: [[0, "desc"]]
            }
        });

        $('#uploadModal').on('hidden.bs.modal', UploadWizard.reset);
    });
    $(function () {
        $('#selfCertifyingTitleCodesImportTable').DataTable({
            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
            columnDefs: [
                { targets: [-1, -2, -3], sortable: false }
            ]
        });
    });
</script>

}
