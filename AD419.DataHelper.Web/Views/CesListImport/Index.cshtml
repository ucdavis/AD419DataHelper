@model IEnumerable<AD419.DataHelper.Web.Models.CesListImport>

@{
    ViewBag.Title = "Index - CES List";
}

<div class="pull-right">
    <button class="btn btn-default display-inline" data-toggle="modal" data-target="#uploadModal"><i class="fa fa-upload"></i> Upload New Source File</button>
    <form action="@Url.Action("DeleteAll")" method="POST" class="display-inline">
        @Html.AntiForgeryToken()
        <input type="submit" id="btnDeleteAll" value="Delete All" title="Delete All" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete ALL the records?')"/>
    </form>
</div>

<h2>@ViewBag.Title</h2>
<p>
    @Html.ActionLink("Create New", "Create", "CesListImport", null, new { @class="btn btn-default" })
</p>

@if (Model.Count() != 0)
{
    <table id="cesImportTable" class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PI)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeptLevelOrg)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProjectAccessionNum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProjectNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PercentCeEffort)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FullAnnualPayRate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TitleCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FTE)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Chart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Account)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SubAccount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EstimatedCeExpenses)
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PI)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeptLevelOrg)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectAccessionNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PercentCeEffort)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullAnnualPayRate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TitleCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FTE)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Chart)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Account)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SubAccount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EstimatedCeExpenses)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                    </td>
                    <td>
                        @Html.ActionLink("Details", "Details", new { id = item.Id })
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h4>CES List Data has yet to be created or uploaded.</h4>
    <p>Select the "Create New" (above) or browse and display an existing CES List Excel file (above).</p>
}

@Html.Partial("_Upload")

@section AdditionalScripts
{
    <script type="text/javascript" src="~/Scripts/upload-wizard.js"></script>
    <script type="text/javascript">
        $(function () {
            UploadWizard.setup({
                uploadUrl: '@Url.Action("Upload")',
                tableOptions: {
                    order: [[0, "desc"]]
                }
            });

            $('#uploadModal').on('hidden.bs.modal', UploadWizard.reset);
        });
        $(function () {
            $('#fieldImportTable').DataTable({
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                columnDefs: [
                    { targets: [-1, -2, -3], sortable: false }
                ]
            });
        });
    </script>
}
