@model AD419.DataHelper.Web.ViewModels.ExpenseOrgMappingsEditViewModel

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        
<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ExpenseOrgMapping.Id)
    @if (Model.UnknownDepartmentAccountDetails.Any())
    {
    <div>
        <h4>Accounts Details for @Model.ExpenseOrgMapping.ExpenseOrgR @(string.IsNullOrEmpty(Model.ExpenseOrgMapping.ExpenseOrg) ? "" : "- " + Model.ExpenseOrgMapping.ExpenseOrg)</h4>
        <table id="unknownDepartmentsTable" class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].Chart)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].OrgR)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].SuggestedOrgR)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].Org)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].Account)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].AccountName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].ARCName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].School)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].Department)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].MgrName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].PrincipalInvestigatorName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].EmployeeId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnknownDepartmentAccountDetails[0].Purpose)
                    </th>
                    @*<th></th>*@
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.UnknownDepartmentAccountDetails)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Chart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrgR)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SuggestedOrgR)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Org)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Account)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AccountName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ARCName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.School)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Department)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MgrName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PrincipalInvestigatorName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmployeeId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Purpose)
                        </td>
                        @*<td>
                            @Html.ActionLink("Create Remap OrgR", "Create", new { Chart = item.Chart, OrgR = item.OrgR, Org = item.Org, SuggestedOrgR = item.SuggestedOrgR }, new { @class = "btn btn-default display-inline" })
                        </td>*@
                    </tr>
                }
            </tbody>
        </table>
      <hr />
     </div>
     }  
        <h4>@ViewBag.Title - @Model.ExpenseOrgMapping.ExpenseOrgR @(string.IsNullOrEmpty(Model.ExpenseOrgMapping.ExpenseOrg) ? "" : "- " + Model.ExpenseOrgMapping.ExpenseOrg) Mapping</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseOrgMapping.Chart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpenseOrgMapping.Chart, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ExpenseOrgMapping.Chart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseOrgMapping.ExpenseOrgR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpenseOrgMapping.ExpenseOrgR, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ExpenseOrgMapping.ExpenseOrgR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseOrgMapping.ExpenseOrg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpenseOrgMapping.ExpenseOrg, new { htmlAttributes = new { @class = "form-control" } }) @Html.Label("(Leave blank if applies to ALL child Orgs)")
                @Html.ValidationMessageFor(model => model.ExpenseOrgMapping.ExpenseOrg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseOrgMapping.AD419OrgR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExpenseOrgMapping.AD419OrgR, Model.ReportingOrgsSelectList, htmlAttributes: new { @class = "form-control" }, optionLabel: "None")
                @Html.ValidationMessageFor(model => model.ExpenseOrgMapping.AD419OrgR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
